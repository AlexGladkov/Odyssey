package ru.alexgladkov.common.root.screens

import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.material.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.saveable.rememberSaveable
import androidx.compose.ui.Modifier
import androidx.compose.runtime.*
import androidx.compose.ui.unit.dp
import ru.alexgladkov.common.root.helpers.DataModel
import ru.alexgladkov.common.root.helpers.generateProducts
import ru.alexgladkov.odyssey.core.local.LocalRootController

@Composable
fun SearchScreen() {
    val rootController = LocalRootController.current

    var searchText by rememberSaveable { mutableStateOf("") }
    val generated by rememberSaveable { mutableStateOf(generateProducts(50)) }
    var filtered by rememberSaveable { mutableStateOf(listOf<DataModel>()) }

    Column(modifier = Modifier.fillMaxSize()) {
        Row(modifier = Modifier.fillMaxWidth().padding(16.dp)) {
            TextField(
                modifier = Modifier.weight(1f).padding(end = 16.dp),
                value = searchText,
                onValueChange = {
                    searchText = it
                }
            )

            Button(onClick = {
                filtered = generated.filter { it.title.contains(searchText) }
            }) {
                Text("Search")
            }
        }

        LazyColumn(modifier = Modifier.weight(1f)) {
            filtered.forEach {
                item {
                    Text(
                        modifier = Modifier.clickable {
                            rootController.push("product", it)
                        }.fillMaxWidth().padding(16.dp),
                        text = it.title
                    )
                }
            }
        }
    }
}